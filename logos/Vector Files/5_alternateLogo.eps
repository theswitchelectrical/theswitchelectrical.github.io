%!PS-Adobe-3.0 EPSF-3.0
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.10.3 (Build 14D136) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 213 47
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
{ld}repeat pop
/SC{	
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		
/cm {cmmtx astore CM concat}bd	
/W{clip newpath}bd
/W*{eoclip newpath}bd
statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	
    true
}{
    pop	
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse
{	
    { 
	{ 
	    pop pop 
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd
/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd
/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd
/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	
dict begin
{def} repeat
pop		
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	
}bd
/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ 
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ 
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		
/cp_proc/x_proc ld 	
/base_charpath		
{
    /t_array xs
    /t_i 0 def
    { 
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ 
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ 
findfont dup length dict copy definefont pop
}bd
L3? dup dup{save exch}if
/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def
/setupFunEval 
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   
		    
	[ 
	    0 1 nRange 1 sub
	    { 
		    2 mul/nDim2 xd		
		    Range nDim2 get		
		    Range nDim2 1 add get	
		    1 index sub			
						
		    255 div			
		    exch			
	    }for
	]store
    end
}bd
/FunEval 
{
    begin
	
	nRange mul /val xd	
				
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd 
	    val	
	    add DataSource exch get 
	    mulRange nDim2 get mul 	
	    mulRange nDim2 1 add get 
	    add 
	}for	
    end
}bd
/max 
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd
/sh2
{	
	/Coords load aload pop 	
	3 index 3 index translate	
					
	3 -1 roll sub	
	3 1 roll exch 	
	sub				
	2 copy
	dup mul exch dup mul add sqrt	
	dup
	scale  
	atan	
	
	rotate		
	
	/Function load setupFunEval	
	
	
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	
	grestore	
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd
/shp	
{	
	4 copy
	
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse
	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
	
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse
	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd
/calcmaxs
{	
	
	xmin dup mul ymin dup mul add sqrt		
	xmax dup mul ymin dup mul add sqrt		
	xmin dup mul ymax dup mul add sqrt		
	xmax dup mul ymax dup mul add sqrt		
	max max max								
}bd
/sh3
{	
	/Coords load aload pop 	
	5 index 5 index translate	
	3 -1 roll 6 -1 roll sub		
	3 -1 roll 5 -1 roll sub		
	2 copy dup mul exch dup mul add sqrt
	/dx xs						
	2 copy 0 ne exch 0 ne or
	{
		
		exch atan rotate	
	}{
		pop pop
	}ifelse
	
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	
	/Nsteps xs		
	setupFunEval		
	
	
	
	
	
	dx r2 add r1 lt{
		
		0 
	}{
		dx r1 add r2 le
		{ 
			1
		}{ 
			r1 r2 eq
			{	
				2
			}{ 
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		
	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	
		{	
			0/Function load FunEval sc	
			
			
			
			
			{ 
				{	
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		
				}
				{	
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	
					
					
				
					
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	
					
				
					r2 r1 gt{	
						
						0 r1
						r1 neg r2 r1 sub div dx mul	
						0	
						shp	
					}{	
						
						
						
						0 r1 calcmaxs	
						dup
						
						r2 add dx mul dx r1 r2 sub sub div
						neg				
						exch 1 index	
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	
		}if
	}if
	
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	
	
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	
		{	
			Nsteps/Function load FunEval sc	
			
			
			
			
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		
				} 
				{	
					
					
					xmax abs r1 add r1 dx r1 shp
				}	
				{	
			
					r2 r1 gt{
						
						
						
						calcmaxs dup	
						
						r1 add dx mul dx r2 r1 sub sub div	
						exch 1 index	
						exch sub
						dx r2
						shp
					}{	
						
						r1 neg r2 r1 sub div dx mul	
						0		
						dx 		
						r2		
						shp
					}ifelse
				}
			}			
			sh3tp get exec	
		}if
	}if
}bd
/sh		
{	
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	
					2 index sub				
					3 index					
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd
{restore}if not dup{save exch}if
	L3?{	
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if
end
setpacking
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 213 47
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: AXCICR+OpenSans
%!FontType1-1.0: AXCICR+OpenSans 1.0000.1.1000
/FontInfo 1 dict dup begin
/FSType 8 def
end readonly def
14 dict begin/FontName /AXCICR+OpenSans def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /A put
dup 34 /L put
dup 35 /space put
dup 36 /E put
dup 37 /C put
dup 38 /T put
dup 39 /R put
dup 40 /I put
dup 41 /S put
dup 42 /V put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[2048 -1126 1 index div -555 2 index div 2466 3 index div 2146 5 -1 roll div]cvx def
/sfnts [<




00>] def
/CharStrings 12 dict dup begin
/.notdef 0 def
/space 1 def
/A 2 def
/C 3 def
/E 4 def
/L 5 def
/R 6 def
/S 7 def
/T 8 def
/V 9 def
/I 10 def
/Iota 11 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontInfo 1 dict dup begin
/FSType 8 def
end readonly def
/FontType 1 def
/FontMatrix [ 0.00048828125 0 0 0.00048828125 0 0 ] def
/FontBBox{-1126 -555 2466 2146}def
/UniqueID 4521567 def
currentdict currentfile eexec

158943D2066790EA0272C44439355AB66607F9B688B1C19D4FDDFB4D4EBD3DE0D34BA727AEF01B47A3A43AD50310C108B5AAC6ED0CAA819E21CE5AAE2942BA768DA0DEE9C68E61166C4D60D4FFC2856C5BD88EDC2C64C4E7A02EEAE9FD568AE110B4B5A0B15C55A679D9B45FDB94C36E0A2B51DA34EC06BB8CA4BB64EF2ECC2D33E420DA1EB4EE16D0000104810EA7CC692897881FC5319B702FAFE3412F53C18A900854C861758813A5029F42486D6464BFF703AC6A715558CB88813562D1831CC6D68A915BEB5C0476FE77FE6B6E1EE0C9E6EE9423522E5DDA235B394CFE02B498C9B38ACBDD1CC566FCFE78A1358BDDF1D7C709578B711A91329A1473818B1BA6BAF85147393A8F4811C49FD1CBC3E2CBEC7782992210EDDB742FDBDE97476546A99084F6ED6313A000C82B70D0FA46D56F506B61EA5A74A243A0068BE94249F22EBA06DB8873791544F527CDB0860E6FC37C576E208A22025FF3FA9AA6231459AB9240FF58CDB658174C2AE723BEC513B2CB07E346A356F994279B08FEA7EEB543BEC6C63FBEFEE6E6BE6909D2ECD6C05DF26FF8A36D2E2E56819602C0EB86898F420D7E3494102475EE42BD02BA562EF9E9D08D50C4FC0A5BC9DA875B3831D4B58270FCF7D48574F8D59F1CFFC5ED910E7D7A3A5FAC510C5EF85513C4B6F79ACF72F53E5993808AE9040AD60FF07B02A7343B5A806023EB7D3F8A14543B693022DB2D94178C27C2068CC59184236663FF31C4FA5FFC4A23068C80CF13C8844832897A1459E636691C96477FC510AC8333D232ADF8C7265646B16C481CDB0F44683AE4472C6120328B62CA7D62ED89536B73F4CE20D666601846A1F015087138829BA3BEEA6C8A6FEA70D09F2072A0021A47E26F9C
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/AXCICR+OpenSans cguidfix
/F1.1/AXCICR+OpenSans renmfont
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ { 1.8008  exp } bind { 1.8008  exp } bind { 1.8008  exp } bind ] def 
/MatrixABC [ 0.4295 0.2318 0.0204 0.3278 0.6722 0.1111 0.1933 0.0960 0.9578 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs2 exch/ColorSpace dr pop
%%EndPageSetup
0.60000002 i
/Cs1 SC
0.11754856 0.110233 0.099986471 sc
q
0.088 37.801998 m
0.088 33.598 l
6.552 33.598 l
6.552 15.198 l
10.902 15.198 l
10.902 33.598 l
17.372 33.598 l
17.372 37.801998 l
0.088 37.801998 l
W*
0 0 213 47 rc
-4.9120002 42.801998 m
22.372 42.801998 l
22.372 10.198 l
-4.9120002 10.198 l
h
f
Q
q
35.546001 37.801998 m
35.546001 28.888 l
26.087999 28.888 l
26.087999 37.801998 l
21.723 37.801998 l
21.723 15.198 l
26.087999 15.198 l
26.087999 24.75 l
35.546001 24.75 l
35.546001 15.198 l
39.896999 15.198 l
39.896999 37.801998 l
35.546001 37.801998 l
W*
0 0 213 47 rc
16.723 42.801998 m
44.896999 42.801998 l
44.896999 10.198 l
16.723 10.198 l
h
f
Q
q
49.622002 19.329 m
49.622002 24.775999 l
56.132 24.775999 l
56.132 28.915001 l
49.622002 28.915001 l
49.622002 33.664001 l
60.688999 33.664001 l
60.688999 37.801998 l
45.257999 37.801998 l
45.257999 15.198 l
61.366001 15.198 l
61.366001 19.329 l
49.622002 19.329 l
W*
0 0 213 47 rc
40.257999 42.801998 m
66.365997 42.801998 l
66.365997 10.198 l
40.257999 10.198 l
h
f
Q
q
111.033 24.311001 m
110.694 25.042 110.256 25.679001 109.711 26.205 c
109.16 26.743 108.542 27.187 107.838 27.546 c
107.14 27.919001 106.423 28.223 105.692 28.489 c
104.955 28.761999 104.237 29.014 103.54 29.233 c
102.836 29.452999 102.218 29.677999 101.667 29.924 c
101.122 30.177 100.677 30.455999 100.345 30.754999 c
100.006 31.059999 99.839996 31.445 99.839996 31.889999 c
99.839996 32.581001 100.106 33.112999 100.637 33.484001 c
101.169 33.869999 101.906 34.049 102.849 34.049 c
103.354 34.049 103.812 33.995998 104.231 33.869999 c
104.643 33.757 105.015 33.577999 105.333 33.370998 c
105.652 33.152 105.931 32.901001 106.164 32.608002 c
106.396 32.308998 106.576 31.99 106.715 31.658001 c
110.621 32.946999 l
110.402 33.703999 110.076 34.408001 109.645 35.032001 c
109.213 35.669998 108.681 36.222 108.057 36.693001 c
107.426 37.165001 106.695 37.522999 105.872 37.789001 c
105.048 38.049 104.125 38.187 103.102 38.187 c
101.886 38.187 100.803 38.021 99.852997 37.688999 c
98.910004 37.356998 98.112999 36.911999 97.461998 36.334999 c
96.804001 35.77 96.313004 35.118999 95.967003 34.355 c
95.628998 33.611 95.456001 32.806999 95.456001 31.950001 c
95.456001 30.974001 95.622002 30.122999 95.960999 29.438999 c
96.299004 28.735001 96.737999 28.150999 97.282997 27.653 c
97.834 27.160999 98.452003 26.743 99.155998 26.41 c
99.852997 26.065001 100.564 25.773001 101.301 25.527 c
102.025 25.274 102.743 25.028999 103.44 24.809 c
104.144 24.584 104.762 24.330999 105.314 24.046 c
105.858 23.767 106.297 23.448 106.635 23.075001 c
106.974 22.704 107.14 22.245001 107.14 21.694 c
107.14 21.236 107.054 20.844 106.881 20.504999 c
106.708 20.16 106.456 19.867001 106.137 19.648001 c
105.818 19.409 105.433 19.243 104.988 19.117001 c
104.543 19.011 104.045 18.951 103.5 18.951 c
102.942 18.951 102.418 19.037001 101.926 19.202999 c
101.441 19.382 100.983 19.628 100.564 19.934 c
100.145 20.239 99.761002 20.612 99.421997 21.056999 c
99.083 21.488001 98.790001 21.973 98.544998 22.497999 c
94.571999 21.017 l
94.898003 20.059999 95.343002 19.190001 95.901001 18.426001 c
96.452003 17.662001 97.110001 17.004 97.860001 16.473 c
98.611 15.935 99.447998 15.53 100.378 15.231 c
101.301 14.952 102.291 14.799 103.354 14.799 c
104.51 14.799 105.586 14.952 106.589 15.257 c
107.585 15.563 108.449 16.007999 109.179 16.599001 c
109.91 17.191 110.488 17.914 110.907 18.757999 c
111.325 19.615 111.537 20.584 111.537 21.694 c
111.537 22.716999 111.371 23.587 111.033 24.311001 c
W*
0 0 213 47 rc
89.571999 43.187 m
116.537 43.187 l
116.537 9.7989998 l
89.571999 9.7989998 l
h
f
Q
q
134.838 37.801998 m
132.314 25.082001 l
132.22701 24.697001 132.16701 24.378 132.134 24.125 c
132.09399 23.865999 132.061 23.627001 132.028 23.395 c
132.00101 23.627001 131.961 23.865999 131.922 24.132 c
131.875 24.391001 131.802 24.709999 131.696 25.108 c
128.547 37.801998 l
124.761 37.801998 l
121.652 25.108 l
121.559 24.709999 121.493 24.391001 121.453 24.132 c
121.407 23.865999 121.373 23.627001 121.34 23.395 c
121.307 23.627001 121.274 23.865999 121.241 24.125 c
121.201 24.378 121.141 24.697001 121.054 25.082001 c
118.537 37.801998 l
114.04 37.801998 l
118.882 15.198 l
122.948 15.198 l
126.275 28.530001 l
126.362 28.875 126.428 29.18 126.481 29.459 c
126.535 29.732 126.574 29.983999 126.607 30.202999 c
126.641 29.983999 126.674 29.732 126.714 29.459 c
126.76 29.18 126.827 28.862 126.92 28.502001 c
130.341 15.198 l
134.412 15.198 l
139.295 37.801998 l
134.838 37.801998 l
W*
0 0 213 47 rc
109.04 42.801998 m
144.295 42.801998 l
144.295 10.198 l
109.04 10.198 l
h
f
Q
q
143.825 37.801998 m
148.17599 37.801998 l
148.17599 15.198 l
143.825 15.198 l
143.825 37.801998 l
h
143.825 37.801998 m
W*
0 0 213 47 rc
138.825 42.801998 m
153.17599 42.801998 l
153.17599 10.198 l
138.825 10.198 l
h
f
Q
q
152.7 37.801998 m
152.7 33.598 l
159.16299 33.598 l
159.16299 15.198 l
163.51401 15.198 l
163.51401 33.598 l
169.97701 33.598 l
169.97701 37.801998 l
152.7 37.801998 l
W*
0 0 213 47 rc
147.7 42.801998 m
174.97701 42.801998 l
174.97701 10.198 l
147.7 10.198 l
h
f
Q
q
186.33099 21.940001 m
186.07899 21.514999 185.806 21.122999 185.521 20.764 c
185.228 20.405001 184.916 20.1 184.591 19.854 c
184.258 19.601999 183.89301 19.396 183.508 19.256001 c
183.116 19.117001 182.69099 19.037001 182.233 19.037001 c
181.349 19.037001 180.592 19.27 179.967 19.715 c
179.343 20.16 178.832 20.738001 178.433 21.455 c
178.035 22.172001 177.73599 22.976 177.549 23.853001 c
177.35699 24.736 177.26401 25.620001 177.26401 26.497 c
177.26401 27.048 177.297 27.620001 177.364 28.197001 c
177.437 28.782 177.549 29.346001 177.703 29.898001 c
177.862 30.455999 178.06799 30.974001 178.32001 31.472 c
178.57201 31.964001 178.88499 32.389 179.25 32.759998 c
179.61501 33.132999 180.047 33.424999 180.545 33.637001 c
181.037 33.856998 181.601 33.963001 182.233 33.963001 c
182.724 33.963001 183.16901 33.896999 183.561 33.777 c
183.96001 33.650002 184.31799 33.484001 184.644 33.258999 c
184.96899 33.026001 185.27499 32.747002 185.56 32.415001 c
185.84 32.083 186.119 31.698 186.39101 31.278999 c
190.30299 33.067001 l
190.05099 33.691002 189.692 34.314999 189.22099 34.925999 c
188.755 35.529999 188.18401 36.069 187.513 36.554001 c
186.842 37.025002 186.05901 37.417 185.18201 37.716 c
184.298 38.007999 183.315 38.147999 182.233 38.147999 c
181.063 38.147999 180.021 37.981998 179.091 37.650002 c
178.16701 37.317001 177.35699 36.859001 176.659 36.280998 c
175.955 35.695999 175.35699 35.019001 174.85899 34.262001 c
174.36099 33.484001 173.95599 32.681 173.644 31.811001 c
173.338 30.954 173.106 30.063999 172.96001 29.153999 c
172.813 28.250999 172.74001 27.367001 172.74001 26.497 c
172.74001 25.566 172.80701 24.636999 172.953 23.700001 c
173.092 22.757 173.31799 21.860001 173.63 20.99 c
173.94299 20.125999 174.341 19.323 174.83299 18.566 c
175.33099 17.827999 175.929 17.17 176.633 16.613001 c
177.33701 16.061001 178.15401 15.616 179.077 15.311 c
180.00101 14.991 181.05 14.839 182.233 14.839 c
183.24899 14.839 184.179 14.966 185.022 15.244 c
185.85899 15.523 186.617 15.895 187.28101 16.393 c
187.952 16.878 188.536 17.469 189.041 18.153999 c
189.54601 18.844999 189.978 19.601999 190.336 20.431999 c
186.33099 21.940001 l
W*
0 0 213 47 rc
167.74001 43.147999 m
195.336 43.147999 l
195.336 9.8389997 l
167.74001 9.8389997 l
h
f
Q
q
208.22501 37.801998 m
208.22501 28.888 l
198.76601 28.888 l
198.76601 37.801998 l
194.395 37.801998 l
194.395 15.198 l
198.76601 15.198 l
198.76601 24.75 l
208.22501 24.75 l
208.22501 15.198 l
212.576 15.198 l
212.576 37.801998 l
208.22501 37.801998 l
W*
0 0 213 47 rc
189.395 42.801998 m
217.576 42.801998 l
217.576 10.198 l
189.395 10.198 l
h
f
Q
0.31656888 0.68624741 0.2770009 sc
q
89.75 37.803001 m
89.75 15.192 l
67.125 15.192 l
67.125 37.803001 l
74.153 37.803001 l
74.153 33.664001 l
71.260002 33.665001 l
71.260002 19.33 l
85.612 19.33 l
85.612 33.664001 l
82.719002 33.675999 l
82.719002 37.803001 l
89.75 37.803001 l
W*
0 0 213 47 rc
62.125 42.803001 m
94.75 42.803001 l
94.75 10.192 l
62.125 10.192 l
h
f
Q
q
76.383003 46.234001 m
80.491997 46.234001 l
80.491997 26.208 l
76.383003 26.208 l
76.383003 46.234001 l
h
76.383003 46.234001 m
W*
0 0 213 47 rc
71.383003 51.234001 m
85.491997 51.234001 l
85.491997 21.208 l
71.383003 21.208 l
h
f
Q
/Cs2 SC
0 0 0 sc
0 i
q
0 0 213 47 rc
1 0 0 -1 73 12 cm
/F1.1[ 10 0 0 -10 0 0]sf
0 11 m
(!""#$"$%&'\(%!"#\)$'*\(%$\))[ 7.237216 6.099521 6.099521 3.506747 6.470614 6.099521 6.470614 7.217685 6.441317 7.090732 3.697177 7.217685 7.237216 6.099521 3.506747 6.397372 6.470614 7.090732 6.861239 3.697177 7.217685 6.470614 0.000000 ] xS
ep
end
%%Trailer
%%EOF
